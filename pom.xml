<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>no.liflig</groupId>
  <artifactId>ks2kurs</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>ks2kurs</name>

  <properties>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <java.version>11</java.version>
    <kotlin.version>1.7.22</kotlin.version>
    <junit.version>5.9.2</junit.version>
    <http4k.version>4.37.0.0</http4k.version>
    <arrow.version>1.1.5</arrow.version>
    <awssdk.version>2.17.102</awssdk.version>
    <kotlinx.serialization.version>1.4.0-RC</kotlinx.serialization.version>
    <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
    <maven-shade-plugin.version>3.4.1</maven-shade-plugin.version>

    <ktlint-maven-plugin.version>1.14.0</ktlint-maven-plugin.version>


    <hikariCP.version>5.0.1</hikariCP.version>
    <flyway-core.version>8.5.13</flyway-core.version>
    <postgresql.version>42.5.1</postgresql.version>
    <jdbi3-core.version>3.36.0</jdbi3-core.version>

    <!-- Logging -->
    <slf4j-api.version>2.0.6</slf4j-api.version>
    <kotlinx-coroutines-slf4j.version>1.6.4</kotlinx-coroutines-slf4j.version>
    <kotlin-logging-jvm.version>3.0.4</kotlin-logging-jvm.version>
    <logback-classic.version>1.4.5</logback-classic.version>
    <logstash-logback-encoder.version>7.2</logstash-logback-encoder.version>


    <!--Test-->
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <testcontainers.postgresql.version>1.17.6</testcontainers.postgresql.version>
    <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>

  </properties>

  <scm>
    <!--<developerConnection>scm:git:https://github.com/capralifecycle/.git</developerConnection>
    <connection>scm:git:https://github.com/capralifecycle/</connection>
    <url>https://github.com/capralifecycle/</url>
    <tag>HEAD</tag>-->
  </scm>

  <profiles>
    <profile>
      <id>gh-actions-build</id>
      <properties>
        <!--suppress UnresolvedMavenProperty -->
        <build.commit>${env.GIT_COMMIT_ID}</build.commit>
        <!--suppress UnresolvedMavenProperty -->
        <build.branch>${env.BRANCH_NAME}</build.branch>
        <build.timestamp>${timestamp}</build.timestamp>
      </properties>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.http4k</groupId>
        <artifactId>http4k-bom</artifactId>
        <version>${http4k.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.9.2</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-format-kotlinx-serialization</artifactId>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-server-jetty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-client-jetty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-format-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.http4k</groupId>
      <artifactId>http4k-contract</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlinx</groupId>
      <artifactId>kotlinx-coroutines-slf4j</artifactId>
      <version>${kotlinx-coroutines-slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.microutils</groupId>
      <artifactId>kotlin-logging-jvm</artifactId>
      <version>${kotlin-logging-jvm.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-classic.version}</version>
    </dependency>
    <dependency>
      <groupId>net.logstash.logback</groupId>
      <artifactId>logstash-logback-encoder</artifactId>
      <version>${logstash-logback-encoder.version}</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>sqs</artifactId>
      <version>${awssdk.version}</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>dynamodb</artifactId>
      <version>${awssdk.version}</version>
    </dependency>
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>apigatewaymanagementapi</artifactId>
      <version>${awssdk.version}</version>
    </dependency>
    <dependency>
      <groupId>io.arrow-kt</groupId>
      <artifactId>arrow-core-jvm</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${hikariCP.version}</version>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>${flyway-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jdbi</groupId>
      <artifactId>jdbi3-core</artifactId>
      <version>${jdbi3-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-api</artifactId>
      <version>0.11.5</version>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-impl</artifactId>
      <version>0.11.5</version>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-jackson</artifactId>
      <version>0.11.5</version>
    </dependency>


    <!--test scope-->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility-kotlin</artifactId>
      <version>4.2.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources-filtered</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <!-- For Sonarcloud reports -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <phase>package</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <formats>
                <format>XML</format>
              </formats>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Plugin for creating self-contained jar file (fat-jar / uber-jar) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <!-- Always use the file target/app.jar, whatever version/name we have. -->
              <finalName>app</finalName>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>*module-info.class</exclude>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>META-INF/LICENSE.txt</exclude>
                    <exclude>META-INF/LICENSE</exclude>
                    <exclude>META-INF/MANIFEST.MF</exclude>
                    <exclude>META-INF/NOTICE</exclude>
                    <exclude>META-INF/NOTICE.txt</exclude>
                    <exclude>META-INF/io.netty.versions.properties</exclude>
                    <exclude>META-INF/kotlinx_coroutines_core.version</exclude>
                    <exlude>META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.properties</exlude>
                    <exclude>META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.xml</exclude>
                    <exclude>META-INF/kotlinx-serialization-json.kotlin_module</exclude>
                    <exclude>META-INF/DEPENDENCIES</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>no.liflig.ks2kurs.MainKt</Main-Class>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <compilerPlugins>
            <plugin>kotlinx-serialization</plugin>
          </compilerPlugins>
          <args>
            <arg>-Xuse-experimental=kotlin.time.ExperimentalTime</arg>
          </args>
          <jvmTarget>${java.version}</jvmTarget>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-serialization</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- ktlint for code style -->
      <plugin>
        <groupId>com.github.gantsign.maven</groupId>
        <artifactId>ktlint-maven-plugin</artifactId>
        <version>${ktlint-maven-plugin.version}</version>
        <configuration>
          <sourceRoots>${project.basedir}/src/main</sourceRoots>
          <testSourceRoots>${project.basedir}/src/test</testSourceRoots>
        </configuration>
        <executions>
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
